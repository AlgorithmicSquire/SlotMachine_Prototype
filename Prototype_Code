#include <LiquidCrystal.h>
const int trigpin = 13;
const int echoPin = A3;
LiquidCrystal lcd(A1, 11, 10, A2, A4, A0, A5);
const int button1 = 7;
int a = 4;
int b = 5;
int c = 12;
int d = 3;
int e = 9;
int f = 2;
int g = 8;
int dp = 6;
const int button2 = 1;
int button1State = HIGH;
int button2State  = HIGH;
int lastButton1State = HIGH;
int lastButton2State = HIGH;
unsigned long lastDebounceTime = 0;
unsigned long lastDebounceTime2 = 0;
unsigned long debounceDelay = 50;
unsigned long startTime =0;
unsigned long displayTime = 1000;

void display1(void) 
{
  
    digitalWrite(b,HIGH);
    digitalWrite(c,HIGH);
} 
//display number2
void
  display2(void) 
{
    digitalWrite(a,HIGH);
    digitalWrite(b,HIGH);

    digitalWrite(g,HIGH);
  digitalWrite(e,HIGH);
    digitalWrite(d,HIGH);
}
  
// display number3
void display3(void) 
{ 
    digitalWrite(a,HIGH);

    digitalWrite(b,HIGH);
    
  digitalWrite(c,HIGH);
    digitalWrite(d,HIGH);

    digitalWrite(g,HIGH);
} 
// display number4
void display4(void) 
{
  
    digitalWrite(f,HIGH);
    digitalWrite(b,HIGH);
    digitalWrite(g,HIGH);

  digitalWrite(c,HIGH);
  
} 
// display number5
void display5(void)
  
{ 
    digitalWrite(a,HIGH);
    digitalWrite(f,HIGH);
    digitalWrite(g,HIGH);

  digitalWrite(c,HIGH);
    digitalWrite(d,HIGH);
} 
// display number6
void
  display6(void) 
{ 
    digitalWrite(a,HIGH);
    digitalWrite(f,HIGH);

    digitalWrite(g,HIGH);
  digitalWrite(c,HIGH);
    digitalWrite(d,HIGH);
  
    digitalWrite(e,HIGH);  
} 
// display number7
void display7(void)
  
{   
   digitalWrite(a,HIGH);
    digitalWrite(b,HIGH);
    digitalWrite(c,HIGH);
}
  
// display number8
void display8(void) 
{ 
    digitalWrite(a,HIGH);

    digitalWrite(b,HIGH);
    digitalWrite(g,HIGH);
  digitalWrite(c,HIGH);

    digitalWrite(d,HIGH);  
    digitalWrite(e,HIGH);  
  digitalWrite(f,HIGH);
  
} 
void clearDisplay(void) 
{ 
    digitalWrite(a,LOW);
    digitalWrite(b,LOW);

    digitalWrite(g,LOW);
  digitalWrite(c,LOW);
    digitalWrite(d,LOW);  

    digitalWrite(e,LOW);  
  digitalWrite(f,LOW);  
} 
void display9(void)
  
{ 
    digitalWrite(a,HIGH);
    digitalWrite(b,HIGH);
    digitalWrite(g,HIGH);

  digitalWrite(c,HIGH);
    digitalWrite(d,HIGH);  
  digitalWrite(f,HIGH);
  
} 
void display0(void) 
{ 
    digitalWrite(a,HIGH);
    digitalWrite(b,HIGH);

  digitalWrite(c,HIGH);
    digitalWrite(d,HIGH);  
    digitalWrite(e,HIGH);
  
  digitalWrite(f,HIGH);  
} 
void randomDisplay(void) {
  int randomNumber = random(10);
  clearDisplay();
  switch (randomNumber) {
    case 1:
      display1();
      displayOnLCD(1);
      break;
    case 2:
      display2();
      displayOnLCD(2);
      break;
    case 3:
      display3();
      displayOnLCD(3);
      break;
    case 4:
      display4();
      displayOnLCD(4);
      break;
    case 5:
      display5();
      displayOnLCD(5);
      break;
    case 6:
      display6();
      displayOnLCD(6);
      break;
    case 7:
      display7();
      displayOnLCD(7);
      break;
    case 8:
      display8();
      displayOnLCD(8);
      break;
    case 9:
      display9();
      displayOnLCD(9);
      break;
    default:
      display0();
      displayOnLCD(0);
      break;
  }
  
}

void displayOnLCD(int number){
  lcd.clear();
  lcd.begin(16,2);
  lcd.setCursor(0,1);
  lcd.print("Number:");
  lcd.print(number);
  
}
void setup() {
  // put your setup code here, to run once:
Serial.begin(9600);  
pinMode(trigpin, OUTPUT);
pinMode(echoPin, INPUT);
pinMode(button1, INPUT_PULLUP);
lcd.clear();
  int i;
   for(i = 2; i<=12 ;i++)


      pinMode(i,OUTPUT);

}

void loop() {
  // put your main code here, to run repeatedly:

int button1Reading = digitalRead(button1);
int button2Reading = digitalRead(button2);
  if (button1Reading != lastButton1State) {
        lastDebounceTime = millis();
    }

  if (button2Reading != lastButton2State) {
    lastDebounceTime2 = millis();
  }
    if ((millis() - lastDebounceTime) > debounceDelay) {
        if (button1Reading != button1State) {
            button1State = button1Reading;

            if (button1State == LOW) {
                // Check if it's the first press since the button was released
                if (millis() - startTime >= displayTime) {
                     int randomNumber = random(1, 10);
                      clearDisplay();
                       switch (randomNumber) {
                      case 1:
                      display1();                     
                      break;
                    case 2:
                      display2();                     
                      break;
                    case 3:
                      display3();
                      break;
                    case 4:
                      display4();
                      break;
                    case 5:
                      display5();                      
                      break;
                    case 6:
                      display6();                      
                      break;
                    case 7:
                      display7();                  
                      break;
                    case 8:                      
                     display8();
                     break;
                    case 9:                     
                     display9();
                      break;
                    default:                      
                      display0();
                     break;
            // Add other cases for numbers 2-9
          }
          displayOnLCD(randomNumber);
                    // Reset start time to prevent continuous display updates
                    startTime = millis();
                }
            } else {
                clearDisplay();
            }
        }
    }

 if ((millis() - lastDebounceTime2) > debounceDelay) {
    if (button2Reading != button2State) {
      button2State = button2Reading;

      if (button2State == LOW) {
        // Manually choose a number between 1 and 9
        int selectedNumber = random(1, 10);
    
        displayOnLCD(selectedNumber);
        lcd.setCursor(1,0);
        lcd.print("Your number:");
        lcd.print(selectedNumber);
        millis();
        clearDisplay();
        
      }
    }
  }


lastButton1State =button1Reading;
lastButton2State = button2Reading;

long duration, inches, cm;
digitalWrite(trigpin, LOW);
delayMicroseconds(2);
digitalWrite(trigpin, HIGH);
delayMicroseconds(10);
digitalWrite(trigpin, LOW);





duration = pulseIn(echoPin, HIGH);

inches = microsecondsToInches(duration);
cm = microsecondsToCentimeters(duration);


Serial.print(inches);
Serial.print("in, ");
Serial.print(cm);
Serial.print("cm");
Serial.println();


Serial.println();
delay(10);

}
long microsecondsToInches(long microseconds){
  return microseconds / 74 / 2;
}
long microsecondsToCentimeters(long microseconds){
  return microseconds / 29 / 2;
}
